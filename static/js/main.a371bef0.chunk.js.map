{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["LineChart","props","canvasRef","createRef","this","myChart","data","datasets","update","Chart","current","type","options","responsive","tooltips","mode","intersect","hover","scales","xAxes","display","scaleLabel","labelString","yAxes","ticks","beginAtZero","labels","cubicInterpolationMode","lineTension","label","title","borderColor","backgroundColor","ref","Component","tiltCoeff","x","Math","pow","areaCoeff","priceCoeff","directionCoeff","App","useState","output","setOutput","direction","setDirection","tilt","useRef","area","usageSummer","usageWinter","price","className","CardGroup","Card","Body","Title","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","aria-describedby","id","Append","Dropdown","Toggle","Menu","Item","as","onClick","Button","variant","click","round","value","map","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a371bef0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {Button, Card, CardGroup, Dropdown, FormControl, InputGroup} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {useRef, useState, Component, createRef} from \"react\";\nimport {Chart} from \"chart.js\";\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.canvasRef = createRef();\n    }\n\n    componentDidUpdate() {\n        this.myChart.data.datasets[0].data = this.props.data;\n        this.myChart.update();\n    }\n\n    componentDidMount() {\n        this.myChart = new Chart(this.canvasRef.current, {\n            type: 'line',\n            options: {\n                responsive: true,\n                tooltips: {\n                    mode: 'index',\n                    intersect: false,\n                },\n                hover: {\n                    mode: 'nearest',\n                    intersect: true\n                },\n                scales: {\n                    xAxes: [{\n                        display: true,\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Miesiąc'\n                        },\n                    }],\n                    yAxes: [{\n                        display: true,\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'kWh/dzień'\n                        },\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }],\n                }\n            },\n            data: {\n                labels: ['Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień'],\n                datasets: [{\n                    cubicInterpolationMode: 'default',\n                    lineTension: 0.3,\n                    label: this.props.title,\n                    data: this.props.data,\n                    borderColor: \"#ffd300\",\n                    backgroundColor: \"transparent\",\n                }],\n            },\n        });\n    }\n\n    render() {\n        return (\n            <canvas ref={this.canvasRef}/>\n        );\n    }\n}\n\nfunction tiltCoeff(x) {\n    if (x > 90 || x < 0) {\n        return 0\n    }\n    return (-1 * (Math.pow(x-45, 2)/2025)) + 1\n}\n\nfunction areaCoeff(x) {\n    if (x < 0) {\n        return 0\n    }\n    return x/32\n}\n\nfunction priceCoeff(x) {\n    return x/0.35\n}\n\nfunction directionCoeff(x) {\n    if (x === \"Północ\") {\n        return 0.3\n    } else if (x === \"Południe\") {\n        return 1.0\n    } else if (x === \"Zachód\") {\n        return 0.8\n    } else {\n        return 0.7\n    }\n}\n\nfunction App() {\n    const [output, setOutput] = useState({\n        \"price\": \"\",\n        \"break-even-point\": \"\",\n        \"savings\": \"\",\n        \"available\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    });\n\n    const [direction, setDirection] = useState(\"Kierunek Dachu\")\n\n    var tilt = useRef(35);\n    var area = useRef(32);\n    var usageSummer = useRef(8);\n    var usageWinter = useRef(14);\n    var price = useRef(0.35);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div>\n                    <CardGroup>\n                        <Card>\n                            <Card.Body>\n                                <Card.Title>Wprowadź dane</Card.Title>\n                                <div>\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>Twój Adres</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            placeholder=\"Puławska 7\"\n                                            aria-label=\"Twój Adres\"\n                                            aria-describedby=\"basic-addon2\"\n                                            id=\"addressInput\"\n                                        />\n                                    </InputGroup>\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>Nachylenie Dachu</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            placeholder=\"35\"\n                                            aria-label=\"Nachylenie Dachu (w stopniach)\"\n                                            aria-describedby=\"basic-addon2\"\n                                            id=\"tilt-input\"\n                                            ref={tilt}\n                                        />\n                                        <InputGroup.Append>\n                                            <InputGroup.Text>stopni</InputGroup.Text>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>Powierzchnia dachu</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            placeholder=\"32\"\n                                            aria-label=\"Powierzchnia dachu\"\n                                            aria-describedby=\"basic-addon2\"\n                                            id=\"area-input\"\n                                            ref={area}\n                                        />\n                                        <InputGroup.Append>\n                                            <InputGroup.Text>m^2</InputGroup.Text>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                    <InputGroup className=\"mb-3\">\n                                        <Dropdown>\n                                            <Dropdown.Toggle id=\"dropdown-basic\">\n                                                {direction}\n                                            </Dropdown.Toggle>\n\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item as=\"button\"\n                                                               onClick={() => setDirection(\"Północ\")}>Północ</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\"\n                                                               onClick={() => setDirection(\"Południe\")}>Południe</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\"\n                                                               onClick={() => setDirection(\"Zachód\")}>Zachód</Dropdown.Item>\n                                                <Dropdown.Item as=\"button\"\n                                                               onClick={() => setDirection(\"Wschód\")}>Wschód</Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                    </InputGroup>\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>Zużycie prądu latem</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            placeholder=\"8\"\n                                            aria-label=\"Zużycie prądu latem\"\n                                            aria-describedby=\"basic-addon2\"\n                                            id=\"usageSummer-input\"\n                                            ref={usageSummer}\n                                        />\n                                        <InputGroup.Append>\n                                            <InputGroup.Text>kWh/dzień</InputGroup.Text>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>Zużycie prądu zimą</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            placeholder=\"14\"\n                                            aria-label=\"Zużycie prądu zimą\"\n                                            aria-describedby=\"basic-addon2\"\n                                            id=\"usageWinter-input\"\n                                            ref={usageWinter}\n                                        />\n                                        <InputGroup.Append>\n                                            <InputGroup.Text>kWh/dzień</InputGroup.Text>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>Koszt prądu</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            placeholder=\"0.35\"\n                                            aria-label=\"0.35\"\n                                            aria-describedby=\"basic-addon2\"\n                                            id=\"cost-input\"\n                                            ref={price}\n                                        />\n                                        <InputGroup.Append>\n                                            <InputGroup.Text>zł/kWh</InputGroup.Text>\n                                        </InputGroup.Append>\n                                        <InputGroup.Append>\n                                            <Button variant=\"outline-primary\" onClick={\n                                                (click) => {\n                                                    setOutput({\n                                                        \"price\": Math.round(60000*areaCoeff(area.current.value)),\n                                                        \"break-even-point\": Math.round(15/priceCoeff(price.current.value)),\n                                                        \"savings\": Math.round(30000*tiltCoeff(tilt.current.value)/areaCoeff(area.current.value)*directionCoeff(direction)*priceCoeff(price.current.value)),\n                                                        \"available\": [15, 15, 18, 20, 22, 24, 27, 27, 23, 19, 18, 17].map((x) => Math.round(x*tiltCoeff(tilt.current.value)*areaCoeff(area.current.value)*directionCoeff(direction))),\n                                                    })\n                                                }\n                                            }>Oblicz</Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                        <Card>\n                            {/*<Card.Img variant=\"top\" src=\"https://upload.wikimedia.org/wikipedia/commons/3/37/Solar_Panels.jpg\" />*/}\n                            <Card.Body>\n                                <Card.Title>Foto Map</Card.Title>\n                                <div>\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>Orientacyjny koszt</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            value={output[\"price\"]}\n                                            placeholder=\"\"\n                                            aria-label=\"Orientacyjny koszt\"\n                                            aria-describedby=\"basic-addon2\"\n                                            id=\"addressInput\"\n                                        />\n                                        <InputGroup.Append>\n                                            <InputGroup.Text>zł</InputGroup.Text>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>Break-Even Point</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            value={output[\"break-even-point\"]}\n                                            placeholder=\"\"\n                                            aria-label=\"Break-Even Point\"\n                                            aria-describedby=\"basic-addon2\"\n                                            id=\"addressInput\"\n                                        />\n                                        <InputGroup.Append>\n                                            <InputGroup.Text>lat</InputGroup.Text>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>Oszczędność po 20 latach</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            value={output[\"savings\"]}\n                                            placeholder=\"\"\n                                            aria-label=\"Oszczędność po 20 latach\"\n                                            aria-describedby=\"basic-addon2\"\n                                            id=\"addressInput\"\n                                        />\n                                        <InputGroup.Append>\n                                            <InputGroup.Text>zł</InputGroup.Text>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                    <div>\n                                        <LineChart\n                                            data={output[\"available\"]}\n                                            title=\"Średnia ilość dostępnej energii\"\n                                            color=\"red\"/>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </CardGroup>\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}